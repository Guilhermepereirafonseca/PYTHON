{"cells":[{"cell_type":"markdown","metadata":{"id":"3rIXZ9crU_hD"},"source":["### **CLASS**"]},{"cell_type":"markdown","metadata":{"id":"DfjoRUsJW60z"},"source":["* Dado Serial: sequencia de dados"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"UeuhlXigUHHF"},"outputs":[{"name":"stdout","output_type":"stream","text":["1. Inserir pessoa\n","2. Alterar pessoa\n","3. Excluir pessoa\n","4. Listar pessoas\n","5. Sair\n"]}],"source":["# Criando uma class pessoa e suas caracteristicas\n","# Esse programa ira calcular o IMC de uma 'pessoa'\n","    # (peso / altura) ^2\n","# tabulate = exibe o código em forma de tabela\n","# append = adiciona algo a lista\n","# print() = uma linha em branco\n","# Indice = Primary key (chave primaria)\n","\n","from tabulate import tabulate\n","\n","class Pessoa:\n","    codigo_sequencial = 1\n","\n","    def __init__(self, nome, idade, peso, altura):\n","        self.codigo = Pessoa.codigo_sequencial\n","        Pessoa.codigo_sequencial += 1\n","        self.nome = nome\n","        self.idade = idade\n","        self.peso = peso\n","        self.altura = altura\n","\n","    def calcular_imc(self):\n","        return self.peso / (self.altura ** 2)\n","\n","    def __str__(self):\n","        return f\"Código: {self.codigo}, Nome: {self.nome}, Idade: {self.idade}, Peso: {self.peso}, Altura: {self.altura}, IMC: {self.calcular_imc():.2f}\"\n","\n","def inserir_pessoa(pessoas):\n","    nome = input(\"Digite o nome da pessoa: \")\n","    idade = int(input(\"Digite a idade da pessoa: \"))\n","    peso = float(input(\"Digite o peso da pessoa (em kg): \"))\n","    altura = float(input(\"Digite a altura da pessoa (em metros): \"))\n","    pessoa = Pessoa(nome, idade, peso, altura)\n","    pessoas[pessoa.codigo] = pessoa\n","    print(\"Pessoa cadastrada com sucesso!\\n\")\n","\n","def alterar_pessoa(pessoas):\n","    codigo = int(input(\"Digite o código da pessoa que deseja alterar: \"))\n","    if codigo in pessoas:\n","        pessoa = pessoas[codigo]\n","        print(\"Pessoa encontrada:\")\n","        print(pessoa)\n","        nome = input(\"Digite o novo nome da pessoa (deixe em branco para não alterar): \")\n","        idade = input(\"Digite a nova idade da pessoa (deixe em branco para não alterar): \")\n","        peso = input(\"Digite o novo peso da pessoa (deixe em branco para não alterar): \")\n","        altura = input(\"Digite a nova altura da pessoa (deixe em branco para não alterar): \")\n","        if nome:\n","            pessoa.nome = nome\n","        if idade:\n","            pessoa.idade = int(idade)\n","        if peso:\n","            pessoa.peso = float(peso)\n","        if altura:\n","            pessoa.altura = float(altura)\n","        print(\"Pessoa alterada com sucesso!\\n\")\n","    else:\n","        print(\"Pessoa não encontrada.\\n\")\n","\n","def excluir_pessoa(pessoas):\n","    codigo = int(input(\"Digite o código da pessoa que deseja excluir: \"))\n","    if codigo in pessoas:\n","        del pessoas[codigo]\n","        print(\"Pessoa excluída com sucesso!\\n\")\n","    else:\n","        print(\"Pessoa não encontrada.\\n\")\n","\n","def listar_pessoas(pessoas):\n","    if not pessoas:\n","        print(\"Nenhuma pessoa cadastrada.\\n\")\n","    else:\n","        table = [[\"Código\", \"Nome\", \"Idade\", \"Peso (kg)\", \"Altura (m)\", \"IMC\"]]\n","        for pessoa in pessoas.values():\n","            table.append([pessoa.codigo, pessoa.nome, pessoa.idade, pessoa.peso, pessoa.altura, pessoa.calcular_imc()])\n","        print(tabulate(table, headers=\"firstrow\", tablefmt=\"grid\"))\n","        print()\n","\n","def menu():\n","    pessoas = {}\n","    while True:\n","        print(\"1. Inserir pessoa\")\n","        print(\"2. Alterar pessoa\")\n","        print(\"3. Excluir pessoa\")\n","        print(\"4. Listar pessoas\")\n","        print(\"5. Sair\")\n","        opcao = input(\"Escolha uma opção: \")\n","        if opcao == \"1\":\n","            inserir_pessoa(pessoas)\n","        elif opcao == \"2\":\n","            alterar_pessoa(pessoas)\n","        elif opcao == \"3\":\n","            excluir_pessoa(pessoas)\n","        elif opcao == \"4\":\n","            listar_pessoas(pessoas)\n","        elif opcao == \"5\":\n","            print(\"Saindo do Programa...\")\n","            break\n","        else:\n","            print(\"Opção inválida. Tente novamente.\\n\")\n","\n","if __name__ == \"__main__\":\n","    menu()"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyNbHn/yRyNStVtq3XbYm4qx","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}